/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns a IsAliveResponse
 */
export function createIsAliveResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIsAliveResponse;
}
/**
 * The deserialization information for the current model
 * @returns a Record<string, (node: ParseNode) => void>
 */
export function deserializeIntoIsAliveResponse(isAliveResponse: Partial<IsAliveResponse> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "startup_time": n => { isAliveResponse.startup_time = n.getStringValue(); },
        "status": n => { isAliveResponse.status = n.getStringValue(); },
        "version": n => { isAliveResponse.version = n.getStringValue(); },
    }
}
/**
 * Contains runtime metadata about the API instance.
 */
export interface IsAliveResponse extends Parsable {
    /**
     * The startup time of the API in ISO 8601 format.
     */
    startup_time?: string;
    /**
     * Contains the current running status of the API.
     */
    status?: string;
    /**
     * The version of the API.
     */
    version?: string;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
export function serializeIsAliveResponse(writer: SerializationWriter, isAliveResponse: Partial<IsAliveResponse> | undefined = {}) : void {
    writer.writeStringValue("startup_time", isAliveResponse.startup_time);
    writer.writeStringValue("status", isAliveResponse.status);
    writer.writeStringValue("version", isAliveResponse.version);
}
/* tslint:enable */
/* eslint-enable */
