---
import i18next, { t } from 'i18next';
import { login, checkToken } from "../lib/loginLogic";
import GlassMorphism from './GlassMorphism.astro'

let email = "";
let password = "";
let token = null;
let error = null;

const handleLogin = async (e) => {
  e.preventDefault();
  const { token, error } = await login(email, password);
  this.token = token;
  this.error = error;
};
---

<GlassMorphism class="max-w-md mx-auto m-10 p-8">
  <h1 class="text-3xl font-bold mb-8 text-center text-dpsg-blue">
    {t('login.title')}
  </h1>
  <form client:only on:submit={handleLogin}>
    <div class="mb-6">
      <label class="block text-dpsg-gray-dark font-bold mb-2" for="email">
        E-Mail:
      </label>
      <input
        class="bg-transparent rounded-md bg-clip-padding border w-full py-3 px-4 text-dpsg-gray-dark leading-tight focus:outline-none focus:shadow-outline border-[0.13rem] border-dpsg-blue"
        type="email"
        id="email"
        value={email}
        on:input={(e) => (email = e.currentTarget.value)}
        required
      />
    </div>
    <div class="mb-6">
      <label class="block text-dpsg-gray-dark font-bold mb-2" for="password">
        Passwort:
      </label>
      <input
        class="bg-transparent rounded-md bg-clip-padding border w-full py-3 px-4 text-dpsg-gray-dark leading-tight focus:outline-none focus:shadow-outline border-[0.13rem] border-dpsg-blue"
        type="password"
        id="password"
        value={password}
        on:input={(e) => (password = e.currentTarget.value)}
        required
      />
    </div>
    {error && <p class="text-dpsg-red text-sm mb-6">{error}</p>}
    {token && <p data-testid='login-token' class="text-dpsg-red text-sm mb-6">{token}</p>}
    <button
      class="bg-dpsg-green hover:bg-dpsg-green-dark text-white font-bold py-3 px-6 rounded-md focus:outline-none focus:shadow-outline transition-colors duration-base ease-in-out"
      type="submit"
    >
      {t('login.submit-button')}
    </button>
  </form>
</div>
